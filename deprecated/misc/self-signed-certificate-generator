#!/bin/bash
#
# self-signed-certificate-generator
#
# Copyright 2015, Alexander Jackson <alexander.jackson@seafile.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Uncomment to debug
#set -x

# Create CA directory structure
mkdir -p /root/CA
cd /root/CA
mkdir -p newcerts private

cat > openssl.cnf << 'ENDOFILE'
#
# OpenSSL configuration file.
#

# Establish working directory.
[ ca ]
default_ca = CA_default

[ CA_default ]
serial = /root/CA/serial
database = /root/CA/index.txt
new_certs_dir = /root/CA/newcerts
certificate = /root/CA/cacert.crt
private_key = /root/CA/private/cakey.pem
default_days = 3650
default_md = sha256
preserve = no
email_in_dn = no
nameopt = default_ca
certopt = default_ca
policy = policy_match

[ policy_match ]
countryName = match
stateOrProvinceName = match
organizationName = match
organizationalUnitName = optional
commonName = supplied
emailAddress = optional

[ req ]
default_bits = 4096 # Size of keys
default_keyfile = key.pem # name of generated keys
default_md = sha256 # message digest algorithm
string_mask = nombstr # permitted characters
distinguished_name = req_distinguished_name
req_extensions = v3_req

[ req_distinguished_name ]
# Variable name   Prompt string
#----------------------   ----------------------------------
0.organizationName = Organization Name (company)
organizationalUnitName = Organizational Unit Name (department, division)
emailAddress = Email Address
emailAddress_max = 40
localityName = Locality Name (city, district)
stateOrProvinceName = State or Province Name (full name)
countryName = Country Name (2 letter code)
countryName_min = 2
countryName_max = 2
commonName = Common Name (hostname, IP, or your name)
commonName_max = 64

# Default values for the above, for consistency and less typing.
# Variable name   Value
#------------------------------   ------------------------------
0.organizationName_default = Seafile GmbH
organizationalUnitName_default = CA Devision
emailAddress_default = postmaster@seafile.de
localityName_default = Wiesentheid
stateOrProvinceName_default = Bayern
countryName_default = DE
commonName_default = Seafile CA

[ v3_ca ]
basicConstraints = CA:TRUE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer:always

[ v3_req ]
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
ENDOFILE


# Create CA signing database
echo '01' > serial
touch index.txt

# Create self-signed root certificate
openssl req -new -x509 -extensions v3_ca -keyout private/cakey.pem -out cacert.crt -days 36500 -config ./openssl.cnf -batch

# Create certificate request
openssl req -new -nodes -out $(hostname -i).csr -config ./openssl.cnf -subj "/C=DE/ST=Bayern/L=Wiesentheid/O=Seafile GmbH/OU=Seahub/CN=$(hostname -f)/CN=$(hostname -s)/CN=$(hostname -i)/emailAddress=postmaster@$(hostname -f)/subjectAltName=DNS.1=$(hostname -f), DNS.2=$(hostname -s), DNS.3=$(hostname -i)" -days 36499

# Sign the certificate request
openssl ca -out $(hostname -i).crt -config ./openssl.cnf -infiles $(hostname -i).csr

# Strip off the human-readable portion from certificate
mv $(hostname -i).crt $(hostname -i).crt.tmp
openssl x509 -in $(hostname -i).crt.tmp -out $(hostname -i).crt
rm $(hostname -i).crt.tmp

# Install certificate and key for usage with Seafiles NGINX configuration
cat $(hostname -i).crt > /etc/nginx/ssl/seafile.crt
mv key.pem $(hostname -i).key
cat $(hostname -i).key > /etc/nginx/ssl/seafile.key

# Test NGINX config and restart if ok
nginx -t && service nginx restart

# List content of /root/CA
ls -ahl /root/CA/

# What next
cat << EOF

  English
  -----------------------------------------------------------------
  Import cacert.crt to Trusted Root Certification Authorities 
  certificate store on Windows.

  You need to setup your Seafile client to use the resolvable
  commonName to connect to the server. Otherwise it will not sync...

  These you can use the following names (Prefer DNS if you can):
  
  1. $(hostname -f)
  2. $(hostname -s)
  3. $(hostname -i) (Use as workaround only)

  
  Deutsch
  -----------------------------------------------------------------
  Importiere cacert.crt in den Windows Zertifikatspeicher unter 
  Vertrauenswürdige Stammzertifizierungsstellen.

  Dann muss der Seafile Client mit einem im Zertifikat eingetragenen 
  und auflösebaren commonName als Serveradresse verbunden werden.

  Sonst klappt die Synchronisierung nicht...

  Folgende Serveradressen können verwendet werden (DNS sollte bevorzugt werden):
  
  1. $(hostname -f)
  2. $(hostname -s)
  3. $(hostname -i) (Nur als Notlösung verwenden)
 
EOF
